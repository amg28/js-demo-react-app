{"version":3,"sources":["components/ui/RequestCounter.js","components/ui/Header.js","components/ui/SearchBar.js","util.js","components/characters/CharacterCard.js","components/characters/CharactersGrid.js","components/ui/Button.js","components/ui/Navigation.js","slices/requestCounterSlice.js","slices/charactersSlice.js","App.js","store.js","index.js","img/rick-morty-logo.svg"],"names":["RequestCounter","count","className","Header","requestCount","src","image","alt","SearchBar","updateCharacters","incrementCounter","search","event","preventDefault","method","url","query","document","getElementById","value","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","onerror","send","then","responseData","results","handleSuccess","catch","error","element","classList","remove","innerHTML","setTimeout","add","handleError","type","name","placeholder","id","onKeyDown","key","onClick","CharacterCard","data","gender","location","origin","species","episode","console","log","length","CharactersGrid","characters","map","character","Button","href","Navigation","slice","createSlice","initialState","reducers","increment","state","actions","countSelector","requestCounter","setCharacters","action","payload","charactersSelector","App","dispatch","useDispatch","useSelector","configureStore","reducer","ReactDOM","render","StrictMode","store","module","exports"],"mappings":"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","file":"static/js/main.47ffcd8e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst RequestCounter = ({count}) => {\r\n\r\n    return (\r\n        <div className=\"counter-container\">\r\n            <div className=\"counter-count\">{count}</div>\r\n            <div>Requests</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestCounter\r\n","import React from 'react'\r\nimport image from '../../img/rick-morty-logo.svg'\r\nimport RequestCounter from './RequestCounter'\r\n\r\nconst Header = ({requestCount}) => {\r\n    return (\r\n        <header className=\"header-container\">\r\n            <RequestCounter count={requestCount} />\r\n            <img className=\"logo\" src={image} alt=\"Rick and Morty logo\"></img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport sendHttpRequest from '../../util.js';\r\n\r\nconst SearchBar = ({ updateCharacters, incrementCounter }) => {\r\n\r\n    function search(event) {\r\n        event.preventDefault();\r\n        const query = document.getElementById('search').value;\r\n        sendHttpRequest('GET', `https://rickandmortyapi.com/api/character/?name=${query}`)\r\n            .then(responseData => handleSuccess(responseData))\r\n            .catch(error => handleError(error));\r\n    }\r\n\r\n    function onEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            search(event);\r\n        }\r\n    }\r\n\r\n    function handleSuccess(responseData) {\r\n        incrementCounter();\r\n        updateCharacters(responseData.results);\r\n    }\r\n\r\n    function handleError({ error }) {\r\n        const element = document.getElementById('search-error');\r\n        element.classList.remove('hidden');\r\n        element.innerHTML = `Ops, looks like something went wrong... Reason: \"${error}\"`;\r\n        setTimeout(() => { element.classList.add('hidden') }, 5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-section\">\r\n            <div className=\"search-container\">\r\n                <input className=\"search-bar\" type=\"search\" name=\"search\" placeholder=\"Try to type Rick...\" id=\"search\" onKeyDown={onEnter}></input>\r\n                <input className=\"search-button\" type=\"submit\" value=\"Search\" onClick={search}></input>\r\n                <div className=\"error hidden\" id=\"search-error\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","/* Creates XMLHttpRequest with a Promise. Response type will be in JSON format.\r\n   Parameters: method for example \"GET\", url for example \"https://example.org/order/1\"  */\r\nconst sendHttpRequest = (method, url) => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(method, url, true);\r\n    xhr.responseType = 'json';\r\n\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 400) {\r\n        reject(xhr.response);\r\n      } else {\r\n        resolve(xhr.response);\r\n      }\r\n    }\r\n\r\n    xhr.onerror = () => {\r\n      reject('Something went wrong...' + xhr.status);\r\n    }\r\n\r\n    xhr.send();\r\n  });\r\n\r\n  return promise;\r\n\r\n}\r\n\r\nexport { sendHttpRequest as default };","import React from 'react'\r\nimport './Card.css';\r\n\r\nconst CharacterCard = ({data}) => {\r\n\r\n    const {name,image,gender, location, origin, species, status, episode} = data;\r\n    console.log(name);\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-front\">\r\n                    <img className=\"card-img\" src={image} alt=\"{name}\"></img>\r\n                    <div className=\"card-name\">{name}</div>\r\n                </div>\r\n                <div className=\"card-back\">\r\n                    <div className=\"card-details\">\r\n                        <div>Gender: {gender}</div>\r\n                        <div>Location: {location.name}</div>\r\n                        <div>Origin: {origin.name}</div>\r\n                        <div>Species: {species}</div>\r\n                        <div>Status: {status}</div>\r\n                        <div>Episodes: {episode.length}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard\r\n","import React from 'react'\r\nimport CharacterCard from './CharacterCard'\r\n\r\nconst CharactersGrid = ({characters}) => {\r\n    return characters\r\n    .map(character => <CharacterCard key={character.id} data={character}/>); \r\n}\r\n\r\nexport default CharactersGrid\r\n","import React from 'react'\r\n\r\nconst Button = ({name, url}) => {\r\n\r\n    return (\r\n        <div>\r\n            <a href={url}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                {name}\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className=\"navigation-container\">\r\n            <Button name='Home' url=''/>\r\n            <Button name='Media' url=''/>\r\n            <Button name='About' url=''/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n//Defines a slice with reducer increment. Reducer will be used to increase value by 1\r\nexport const slice = createSlice({\r\n    name: 'requestCounter',\r\n    initialState: {\r\n        value: 0,\r\n    },\r\n    reducers: {\r\n        increment: state => {\r\n            state.value += 1;\r\n        },\r\n    },\r\n});\r\n\r\n//Exports actions defined in Slice\r\nexport const {increment} = slice.actions;\r\n\r\n//Exports Selector for access to state value\r\nexport const countSelector = state => state.requestCounter.value;\r\n\r\nexport default slice.reducer;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n    name: 'characters',\r\n    initialState: {\r\n        value: [],\r\n    },\r\n    reducers: {\r\n        setCharacters: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\n//Exports actions defined in Slice\r\nexport const {setCharacters} = slice.actions;\r\n\r\n//Exports Selector for access to state value\r\nexport const charactersSelector = state => state.characters.value;\r\n\r\nexport default slice.reducer;","import React from 'react';\n\nimport Header from './components/ui/Header';\nimport Search from './components/ui/SearchBar';\nimport CharactersGrid from './components/characters/CharactersGrid';\nimport Navigation from './components/ui/Navigation';\nimport './App.css';\n\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nimport { increment, countSelector } from './slices/requestCounterSlice';\nimport { setCharacters, charactersSelector } from './slices/charactersSlice';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  const characters = useSelector(charactersSelector);\n  const count = useSelector(countSelector);\n\n  const incrementCounter = () => dispatch(increment());\n  const updateCharacters = characters => dispatch(setCharacters(characters));\n\n  return (\n    <div className=\"container\">\n      <Navigation />\n      <Header requestCount={count} />\n      <Search updateCharacters={updateCharacters} incrementCounter={incrementCounter} />\n      <div className=\"character-container\">\n        <CharactersGrid characters={characters} />\n      </div>\n    </div>);\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport requestCounter from './slices/requestCounterSlice';\r\nimport characters from './slices/charactersSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        requestCounter: requestCounter,\r\n        characters:  characters,\r\n    },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/rick-morty-logo.46971e11.svg\";"],"sourceRoot":""}