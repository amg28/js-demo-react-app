{"version":3,"sources":["img/rick-morty-logo.png","components/ui/Header.js","components/ui/SearchBar.js","util.js","components/characters/CharacterCard.js","components/characters/CharactersGrid.js","App.js","index.js"],"names":["module","exports","Header","className","src","image","alt","SearchBar","setCharacters","type","name","placeholder","id","value","onClick","event","preventDefault","method","url","query","document","getElementById","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","console","log","onerror","send","then","responseData","results","catch","error","element","classList","remove","innerHTML","setTimeout","add","handleError","CharacterCard","CharactersGrid","characters","map","character","key","App","useState","ReactDOM","render","StrictMode"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,6C,iLCW5BC,EARA,WACX,OACI,4BAAQC,UAAU,oBACd,yBAAKA,UAAU,OAAOC,IAAKC,IAAOC,IAAI,0BCyBnCC,EA5BG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAiBhB,OACI,yBAAKL,UAAU,kBACP,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,aAAaM,KAAK,SAASC,KAAK,SAASC,YAAY,sBAAsBC,GAAG,WAC/F,2BAAOT,UAAU,gBAAgBM,KAAK,SAASI,MAAM,SAASC,QAnB9E,SAAgBC,GACZA,EAAMC,iBACN,ICLiBC,EAAQC,EDKnBC,EAAQC,SAASC,eAAe,UAAUR,OCL/BI,EDMD,MCNSC,EDMV,0DAA2DC,GCLhE,IAAIG,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAKV,EAAQC,GAAK,GACtBO,EAAIG,aAAe,OAEnBH,EAAII,OAAS,WACPJ,EAAIK,QAAU,IAChBN,EAAOC,EAAIM,WAEXC,QAAQC,IAAIR,EAAIM,UAChBR,EAAQE,EAAIM,YAIhBN,EAAIS,QAAU,WACZV,EAAO,0BAA4BC,EAAIK,SAGzCL,EAAIU,WDZKC,MAAK,SAAAC,GAAY,OAAI7B,EAAc6B,EAAaC,YAChDC,OAAM,SAAAC,GAAK,OAGpB,YAA8B,IAARA,EAAO,EAAPA,MACZC,EAAUrB,SAASC,eAAe,gBACxCoB,EAAQC,UAAUC,OAAO,UACzBF,EAAQG,UAAR,2DAAwEJ,EAAxE,KACAK,YAAW,WAAOJ,EAAQC,UAAUI,IAAI,YAAW,KAP/BC,CAAYP,SAepB,yBAAKrC,UAAU,eAAeS,GAAG,oBEbtCoC,EAVO,SAAC,GAAmB,IAAlBtC,EAAiB,EAAjBA,KAAML,EAAW,EAAXA,MAE1B,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,WAAWC,IAAKC,EAAOC,IAAI,WAC1C,yBAAKH,UAAU,aAAaO,KCGzBuC,EAPQ,SAAC,GACpB,OADqC,EAAhBC,WAEpBC,KAAI,SAAAC,GAAS,OAAI,kBAAC,EAAD,CAAeC,IAAKD,EAAUxC,GACfF,KAAM0C,EAAU1C,KAChBL,MAAO+C,EAAU/C,YCcvCiD,G,MAfH,WAAM,MAGoBC,mBAAS,IAH7B,mBAGTL,EAHS,KAGG1C,EAHH,KAKhB,OACA,yBAAKL,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQK,cAAeA,IACvB,yBAAKL,UAAU,uBACb,kBAAC,EAAD,CAAgB+C,WAAYA,QCXlCM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtC,SAASC,eAAe,W","file":"static/js/main.cb6b24bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty-logo.8d9fe1e5.png\";","import React from 'react'\r\nimport image from '../../img/rick-morty-logo.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header-container\">\r\n            <img className=\"logo\" src={image} alt=\"Rick and Morty logo\"></img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport sendHttpRequest from '../../util.js';\r\n\r\nconst SearchBar = ({setCharacters}) => {\r\n\r\n    function search(event) {\r\n        event.preventDefault();\r\n        const query = document.getElementById('search').value;\r\n        sendHttpRequest('GET', `https://rickandmortyapi.com/api/character/?name=${query}`)\r\n            .then(responseData => setCharacters(responseData.results))\r\n            .catch(error => handleError(error));\r\n    }\r\n\r\n    function handleError({error}){\r\n        const element = document.getElementById('search-error');\r\n        element.classList.remove('hidden');\r\n        element.innerHTML = `Ops, looks like something went wrong... Reason: \"${error}\"`;\r\n        setTimeout(() => {element.classList.add('hidden')},5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-section\">\r\n                <div className=\"search-container\">\r\n                    <input className=\"search-bar\" type=\"search\" name=\"search\" placeholder=\"Try to type Rick...\" id=\"search\"></input>\r\n                    <input className=\"search-button\" type=\"submit\" value=\"Search\" onClick={search}></input>\r\n                    <div className=\"error hidden\" id=\"search-error\"></div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","/* Creates XMLHttpRequest with a Promise. Response type will be in JSON format.\r\n   Parameters: method for example \"GET\", url for example \"https://example.org/order/1\"  */\r\nconst sendHttpRequest = (method, url) => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(method, url, true);\r\n    xhr.responseType = 'json';\r\n\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 400) {\r\n        reject(xhr.response);\r\n      } else {\r\n        console.log(xhr.response);\r\n        resolve(xhr.response);\r\n      }\r\n    }\r\n\r\n    xhr.onerror = () => {\r\n      reject('Something went wrong...' + xhr.status);\r\n    }\r\n\r\n    xhr.send();\r\n  });\r\n\r\n  return promise;\r\n\r\n}\r\n\r\nexport { sendHttpRequest as default };","import React from 'react'\r\n\r\nconst CharacterCard = ({name, image}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img\" src={image} alt=\"{name}\"></img>\r\n            <div className=\"card-name\">{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard\r\n","import React from 'react'\r\nimport CharacterCard from './CharacterCard'\r\n\r\nconst CharactersGrid = ({characters}) => {\r\n    return characters\r\n    .map(character => <CharacterCard key={character.id}\r\n                                     name={character.name}\r\n                                     image={character.image}/>); \r\n}\r\n\r\nexport default CharactersGrid\r\n","import React, {useState} from 'react';\nimport Header from './components/ui/Header';\nimport Search from './components/ui/SearchBar';\nimport CharactersGrid from './components/characters/CharactersGrid';\nimport './App.css';\n\nconst App = () => {\n\n  //State: holds search results, which are later used for Character grid creation\n  const [characters, setCharacters] = useState([]);\n\n  return (\n  <div className=\"container\">\n    <Header />\n    <Search setCharacters={setCharacters} />\n    <div className=\"character-container\">\n      <CharactersGrid characters={characters} />\n    </div>\n  </div>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}