{"version":3,"sources":["img/rick-morty-logo.svg","app/slices/requestCounterSlice.js","components/ui/RequestCounter.js","components/ui/Header.js","components/ui/SearchBar.js","util.js","components/ui/Button.js","components/ui/Navigation.js","components/characters/CharacterCard.js","components/characters/CharactersGrid.js","App.js","app/store.js","index.js"],"names":["module","exports","slice","createSlice","name","initialState","value","reducers","increment","state","actions","countSelector","requestCounter","RequestCounter","count","useSelector","className","Header","src","image","alt","SearchBar","setCharacters","dispatch","useDispatch","search","event","preventDefault","method","url","query","document","getElementById","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","onerror","send","then","responseData","results","handleSuccess","catch","error","element","classList","remove","innerHTML","setTimeout","add","handleError","type","placeholder","id","onKeyDown","key","onClick","Button","href","Navigation","CharacterCard","data","gender","location","origin","species","episode","console","log","length","CharactersGrid","characters","map","character","App","useState","configureStore","reducer","ReactDOM","render","StrictMode","store"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,6C,uMCG9BC,EAAQC,YAAY,CAC7BC,KAAM,iBACNC,aAAc,CACVC,MAAO,GAEXC,SAAU,CACNC,UAAW,SAAAC,GACPA,EAAMH,OAAS,MAMbE,EAAaN,EAAMQ,QAAnBF,UAGDG,EAAgB,SAAAF,GAAK,OAAIA,EAAMG,eAAeN,OAE5CJ,IAAf,QCLeW,EAZQ,WAEnB,IAAMC,EAAQC,YAAYJ,GAE1B,OACI,yBAAKK,UAAU,qBACX,yBAAKA,UAAU,iBAAiBF,GAChC,2CCEGG,EATA,WACX,OACI,4BAAQD,UAAU,oBACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,OAAOE,IAAKC,IAAOC,IAAI,0BCsCnCC,EAzCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEXC,EAAWC,cAEjB,SAASC,EAAOC,GACZA,EAAMC,iBACN,ICTiBC,EAAQC,EDSnBC,EAAQC,SAASC,eAAe,UAAU1B,OCT/BsB,EDUD,MCVSC,EDUV,0DAA2DC,GCThE,IAAIG,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAKV,EAAQC,GAAK,GACtBO,EAAIG,aAAe,OAEnBH,EAAII,OAAS,WACPJ,EAAIK,QAAU,IAChBN,EAAOC,EAAIM,UAEXR,EAAQE,EAAIM,WAIhBN,EAAIO,QAAU,WACZR,EAAO,0BAA4BC,EAAIK,SAGzCL,EAAIQ,WDPKC,MAAK,SAAAC,GAAY,OAU1B,SAAuBA,GACnBvB,EAASf,KACTc,EAAcwB,EAAaC,SAZDC,CAAcF,MACnCG,OAAM,SAAAC,GAAK,OAcpB,YAAiC,IAAVA,EAAS,EAATA,MACbC,EAAUpB,SAASC,eAAe,gBACxCmB,EAAQC,UAAUC,OAAO,UACzBF,EAAQG,UAAR,2DAAwEJ,EAAxE,KACAK,YAAW,WAAQJ,EAAQC,UAAUI,IAAI,YAAa,KAlBlCC,CAAYP,MAqBpC,OACI,yBAAKlC,UAAU,kBACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,aAAa0C,KAAK,SAAStD,KAAK,SAASuD,YAAY,sBAAsBC,GAAG,SAASC,UArBpH,SAAiBnC,GACK,UAAdA,EAAMoC,KACNrC,EAAOC,MAoBH,2BAAOV,UAAU,gBAAgB0C,KAAK,SAASpD,MAAM,SAASyD,QAAStC,IACvE,yBAAKT,UAAU,eAAe4C,GAAG,oBEvBlCI,EAfA,SAAC,GAAiB,IAAhB5D,EAAe,EAAfA,KAAMyB,EAAS,EAATA,IAEnB,OACI,6BACI,uBAAGoC,KAAMpC,GACL,+BACA,+BACA,+BACA,+BACCzB,KCEF8D,EAVI,WACf,OACI,yBAAKlD,UAAU,wBACX,kBAAC,EAAD,CAAQZ,KAAK,OAAOyB,IAAI,KACxB,kBAAC,EAAD,CAAQzB,KAAK,QAAQyB,IAAI,KACzB,kBAAC,EAAD,CAAQzB,KAAK,QAAQyB,IAAI,OCetBsC,EArBO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEbhE,EAAiEgE,EAAjEhE,KAAKe,EAA4DiD,EAA5DjD,MAAMkD,EAAsDD,EAAtDC,OAAQC,EAA8CF,EAA9CE,SAAUC,EAAoCH,EAApCG,OAAQC,EAA4BJ,EAA5BI,QAAS/B,EAAmB2B,EAAnB3B,OAAQgC,EAAWL,EAAXK,QAG7D,OAFAC,QAAQC,IAAIvE,GAGR,yBAAKY,UAAU,QACX,yBAAKA,UAAU,WAAWE,IAAKC,EAAOC,IAAI,WAC1C,yBAAKJ,UAAU,aAAaZ,GAC5B,yBAAKY,UAAU,gBACX,wCAAcqD,GACd,0CAAgBC,EAASlE,MACzB,wCAAcmE,EAAOnE,MACrB,yCAAeoE,GACf,wCAAc/B,GACd,0CAAgBgC,EAAQG,WCTzBC,EALQ,SAAC,GACpB,OADqC,EAAhBC,WAEpBC,KAAI,SAAAC,GAAS,OAAI,kBAAC,EAAD,CAAelB,IAAKkB,EAAUpB,GAAIQ,KAAMY,QCoB/CC,G,MAjBH,WAAM,MAGoBC,mBAAS,IAH7B,mBAGTJ,EAHS,KAGGxD,EAHH,OAIQ4D,qBAJR,6BAMhB,OACA,yBAAKlE,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQM,cAAeA,IACvB,yBAAKN,UAAU,uBACb,kBAAC,EAAD,CAAgB8D,WAAYA,QCjBnBK,cAAe,CAC1BC,QAAS,CACLxE,eAAgBA,KCExByE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJzD,SAASC,eAAe,W","file":"static/js/main.81424c88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty-logo.46971e11.svg\";","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n//Defines a slice with reducer increment. Reducer will be used to increase value by 1\r\nexport const slice = createSlice({\r\n    name: 'requestCounter',\r\n    initialState: {\r\n        value: 0,\r\n    },\r\n    reducers: {\r\n        increment: state => {\r\n            state.value += 1;\r\n        },\r\n    },\r\n});\r\n\r\n//Exports actions defined in Slice\r\nexport const {increment} = slice.actions;\r\n\r\n//Exports Selector for access to state value\r\nexport const countSelector = state => state.requestCounter.value;\r\n\r\nexport default slice.reducer;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {countSelector} from '../../app/slices/requestCounterSlice'\r\n\r\nconst RequestCounter = () => {\r\n\r\n    const count = useSelector(countSelector);\r\n\r\n    return (\r\n        <div className=\"counter-container\">\r\n            <div className=\"counter-count\">{count}</div>\r\n            <div>Requests</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestCounter\r\n","import React from 'react'\r\nimport image from '../../img/rick-morty-logo.svg'\r\nimport RequestCounter from './RequestCounter'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header-container\">\r\n            <RequestCounter />\r\n            <img className=\"logo\" src={image} alt=\"Rick and Morty logo\"></img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport sendHttpRequest from '../../util.js';\r\nimport { useDispatch } from 'react-redux';\r\nimport { increment } from '../../app/slices/requestCounterSlice'\r\n\r\nconst SearchBar = ({ setCharacters }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function search(event) {\r\n        event.preventDefault();\r\n        const query = document.getElementById('search').value;\r\n        sendHttpRequest('GET', `https://rickandmortyapi.com/api/character/?name=${query}`)\r\n            .then(responseData => handleSuccess(responseData))\r\n            .catch(error => handleError(error));\r\n    }\r\n\r\n    function onEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            search(event);\r\n        }\r\n    }\r\n\r\n    function handleSuccess(responseData) {\r\n        dispatch(increment());\r\n        setCharacters(responseData.results)\r\n    }\r\n\r\n    function handleError({ error }) {\r\n        const element = document.getElementById('search-error');\r\n        element.classList.remove('hidden');\r\n        element.innerHTML = `Ops, looks like something went wrong... Reason: \"${error}\"`;\r\n        setTimeout(() => { element.classList.add('hidden') }, 5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-section\">\r\n            <div className=\"search-container\">\r\n                <input className=\"search-bar\" type=\"search\" name=\"search\" placeholder=\"Try to type Rick...\" id=\"search\" onKeyDown={onEnter}></input>\r\n                <input className=\"search-button\" type=\"submit\" value=\"Search\" onClick={search}></input>\r\n                <div className=\"error hidden\" id=\"search-error\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","/* Creates XMLHttpRequest with a Promise. Response type will be in JSON format.\r\n   Parameters: method for example \"GET\", url for example \"https://example.org/order/1\"  */\r\nconst sendHttpRequest = (method, url) => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(method, url, true);\r\n    xhr.responseType = 'json';\r\n\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 400) {\r\n        reject(xhr.response);\r\n      } else {\r\n        resolve(xhr.response);\r\n      }\r\n    }\r\n\r\n    xhr.onerror = () => {\r\n      reject('Something went wrong...' + xhr.status);\r\n    }\r\n\r\n    xhr.send();\r\n  });\r\n\r\n  return promise;\r\n\r\n}\r\n\r\nexport { sendHttpRequest as default };","import React from 'react'\r\n\r\nconst Button = ({name, url}) => {\r\n\r\n    return (\r\n        <div>\r\n            <a href={url}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n                {name}\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div className=\"navigation-container\">\r\n            <Button name='Home' url=''/>\r\n            <Button name='Media' url=''/>\r\n            <Button name='About' url=''/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\n\r\nconst CharacterCard = ({data}) => {\r\n\r\n    const {name,image,gender, location, origin, species, status, episode} = data;\r\n    console.log(name);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img\" src={image} alt=\"{name}\"></img>\r\n            <div className=\"card-name\">{name}</div>\r\n            <div className=\"card-details\">\r\n                <div>Gender: {gender}</div>\r\n                <div>Location: {location.name}</div>\r\n                <div>Origin: {origin.name}</div>\r\n                <div>Species: {species}</div>\r\n                <div>Status: {status}</div>\r\n                <div>Episodes: {episode.length}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard\r\n","import React from 'react'\r\nimport CharacterCard from './CharacterCard'\r\n\r\nconst CharactersGrid = ({characters}) => {\r\n    return characters\r\n    .map(character => <CharacterCard key={character.id} data={character}/>); \r\n}\r\n\r\nexport default CharactersGrid\r\n","import React, {useState} from 'react';\nimport Header from './components/ui/Header';\nimport Search from './components/ui/SearchBar';\nimport Footer from './components/ui/Navigation';\nimport CharactersGrid from './components/characters/CharactersGrid';\nimport './App.css';\nimport Navigation from './components/ui/Navigation';\n\nconst App = () => {\n\n  //State: holds search results, which are later used for Character grid creation\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState();\n\n  return (\n  <div className=\"container\">\n    <Navigation />\n    <Header />\n    <Search setCharacters={setCharacters} />\n    <div className=\"character-container\">\n      <CharactersGrid characters={characters} />\n    </div>\n  </div>);\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport requestCounter from './slices/requestCounterSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        requestCounter: requestCounter,\r\n    },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}