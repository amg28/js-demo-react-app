{"version":3,"sources":["img/rick-morty-logo.svg","components/ui/Header.js","components/ui/SearchBar.js","util.js","components/characters/CharacterCard.js","components/characters/CharactersGrid.js","App.js","index.js"],"names":["module","exports","Header","className","src","image","alt","SearchBar","setCharacters","search","event","preventDefault","method","url","query","document","getElementById","value","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","onerror","send","then","responseData","results","catch","error","element","classList","remove","innerHTML","setTimeout","add","handleError","type","name","placeholder","id","onKeyDown","key","onClick","CharacterCard","CharactersGrid","characters","map","character","App","useState","ReactDOM","render","StrictMode"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,6C,iLCW5BC,EARA,WACX,OACI,4BAAQC,UAAU,oBACd,yBAAKA,UAAU,OAAOC,IAAKC,IAAOC,IAAI,0BC+BnCC,EAlCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEjB,SAASC,EAAOC,GACZA,EAAMC,iBACN,ICLiBC,EAAQC,EDKnBC,EAAQC,SAASC,eAAe,UAAUC,OCL/BL,EDMD,MCNSC,EDMV,0DAA2DC,GCLhE,IAAII,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAKX,EAAQC,GAAK,GACtBQ,EAAIG,aAAe,OAEnBH,EAAII,OAAS,WACPJ,EAAIK,QAAU,IAChBN,EAAOC,EAAIM,UAEXR,EAAQE,EAAIM,WAIhBN,EAAIO,QAAU,WACZR,EAAO,0BAA4BC,EAAIK,SAGzCL,EAAIQ,WDXKC,MAAK,SAAAC,GAAY,OAAIvB,EAAcuB,EAAaC,YAChDC,OAAM,SAAAC,GAAK,OASpB,YAAiC,IAAVA,EAAS,EAATA,MACbC,EAAUpB,SAASC,eAAe,gBACxCmB,EAAQC,UAAUC,OAAO,UACzBF,EAAQG,UAAR,2DAAwEJ,EAAxE,KACAK,YAAW,WAAQJ,EAAQC,UAAUI,IAAI,YAAa,KAblCC,CAAYP,MAgBpC,OACI,yBAAK/B,UAAU,kBACX,yBAAKA,UAAU,oBACX,2BAAOA,UAAU,aAAauC,KAAK,SAASC,KAAK,SAASC,YAAY,sBAAsBC,GAAG,SAASC,UAhBpH,SAAiBpC,GACK,UAAdA,EAAMqC,KACNtC,EAAOC,MAeH,2BAAOP,UAAU,gBAAgBuC,KAAK,SAASzB,MAAM,SAAS+B,QAASvC,IACvE,yBAAKN,UAAU,eAAe0C,GAAG,oBEnBlCI,EAVO,SAAC,GAAmB,IAAlBN,EAAiB,EAAjBA,KAAMtC,EAAW,EAAXA,MAE1B,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,WAAWC,IAAKC,EAAOC,IAAI,WAC1C,yBAAKH,UAAU,aAAawC,KCGzBO,EAPQ,SAAC,GACpB,OADqC,EAAhBC,WAEpBC,KAAI,SAAAC,GAAS,OAAI,kBAAC,EAAD,CAAeN,IAAKM,EAAUR,GACfF,KAAMU,EAAUV,KAChBtC,MAAOgD,EAAUhD,YCcvCiD,G,MAfH,WAAM,MAGoBC,mBAAS,IAH7B,mBAGTJ,EAHS,KAGG3C,EAHH,KAKhB,OACA,yBAAKL,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQK,cAAeA,IACvB,yBAAKL,UAAU,uBACb,kBAAC,EAAD,CAAgBgD,WAAYA,QCXlCK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3C,SAASC,eAAe,W","file":"static/js/main.70eb5a96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-morty-logo.7123481b.svg\";","import React from 'react'\r\nimport image from '../../img/rick-morty-logo.svg'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header-container\">\r\n            <img className=\"logo\" src={image} alt=\"Rick and Morty logo\"></img>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport sendHttpRequest from '../../util.js';\r\n\r\nconst SearchBar = ({ setCharacters }) => {\r\n\r\n    function search(event) {\r\n        event.preventDefault();\r\n        const query = document.getElementById('search').value;\r\n        sendHttpRequest('GET', `https://rickandmortyapi.com/api/character/?name=${query}`)\r\n            .then(responseData => setCharacters(responseData.results))\r\n            .catch(error => handleError(error));\r\n    }\r\n\r\n    function onEnter(event) {\r\n        if (event.key === 'Enter') {\r\n            search(event);\r\n        }\r\n    }\r\n\r\n    function handleError({ error }) {\r\n        const element = document.getElementById('search-error');\r\n        element.classList.remove('hidden');\r\n        element.innerHTML = `Ops, looks like something went wrong... Reason: \"${error}\"`;\r\n        setTimeout(() => { element.classList.add('hidden') }, 5000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-section\">\r\n            <div className=\"search-container\">\r\n                <input className=\"search-bar\" type=\"search\" name=\"search\" placeholder=\"Try to type Rick...\" id=\"search\" onKeyDown={onEnter}></input>\r\n                <input className=\"search-button\" type=\"submit\" value=\"Search\" onClick={search}></input>\r\n                <div className=\"error hidden\" id=\"search-error\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","/* Creates XMLHttpRequest with a Promise. Response type will be in JSON format.\r\n   Parameters: method for example \"GET\", url for example \"https://example.org/order/1\"  */\r\nconst sendHttpRequest = (method, url) => {\r\n  const promise = new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(method, url, true);\r\n    xhr.responseType = 'json';\r\n\r\n    xhr.onload = () => {\r\n      if (xhr.status >= 400) {\r\n        reject(xhr.response);\r\n      } else {\r\n        resolve(xhr.response);\r\n      }\r\n    }\r\n\r\n    xhr.onerror = () => {\r\n      reject('Something went wrong...' + xhr.status);\r\n    }\r\n\r\n    xhr.send();\r\n  });\r\n\r\n  return promise;\r\n\r\n}\r\n\r\nexport { sendHttpRequest as default };","import React from 'react'\r\n\r\nconst CharacterCard = ({name, image}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img\" src={image} alt=\"{name}\"></img>\r\n            <div className=\"card-name\">{name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterCard\r\n","import React from 'react'\r\nimport CharacterCard from './CharacterCard'\r\n\r\nconst CharactersGrid = ({characters}) => {\r\n    return characters\r\n    .map(character => <CharacterCard key={character.id}\r\n                                     name={character.name}\r\n                                     image={character.image}/>); \r\n}\r\n\r\nexport default CharactersGrid\r\n","import React, {useState} from 'react';\r\nimport Header from './components/ui/Header';\r\nimport Search from './components/ui/SearchBar';\r\nimport CharactersGrid from './components/characters/CharactersGrid';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  //State: holds search results, which are later used for Character grid creation\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  return (\r\n  <div className=\"container\">\r\n    <Header />\r\n    <Search setCharacters={setCharacters} />\r\n    <div className=\"character-container\">\r\n      <CharactersGrid characters={characters} />\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}